/*! (c) Andrea Giammarchi - ISC */
const HTMLParsedElement=(()=>{const e="DOMContentLoaded",t=new WeakMap,n=[],s=e=>{do{if(e.nextSibling)return!0}while(e=e.parentNode);return!1},a=()=>{n.splice(0).forEach(e=>{t.set(e[0],!0),e[0][e[1]]()})};class r extends HTMLElement{static withParsedCallback(r,i="parsed"){const{prototype:c}=r,{connectedCallback:o}=c,l=i+"Callback",d=(t,n,s,a)=>{n.disconnect(),s.removeEventListener(e,a),h(t)},h=e=>{n.length||requestAnimationFrame(a),n.push([e,l])};return Object.defineProperties(c,{connectedCallback:{configurable:!0,value(){if(o&&o.apply(this,arguments),l in this&&!t.has(this)){const n=this,{ownerDocument:a}=n;if(t.set(n,!1),"complete"===a.readyState||s(n))h(n);else{const t=()=>d(n,r,a,t);a.addEventListener(e,t);const r=new MutationObserver(()=>{s(n)&&d(n,r,a,t)});r.observe(n.parentNode,{childList:!0,subtree:!0})}}}},[i]:{configurable:!0,get(){return!0===t.get(this)}}}),r}}return r.withParsedCallback(r)})();