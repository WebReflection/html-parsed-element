/*! (c) Andrea Giammarchi - ISC */
const HTMLParsedElement=(()=>{const e="DOMContentLoaded",t=new WeakMap,n=e=>{do{if(e.nextSibling)return!0}while(e=e.parentNode);return!1};class s extends HTMLElement{static withParsedCallback(s,r="parsed"){const{prototype:a}=s,{connectedCallback:i}=a,o=r+"Callback",c=(t,n,s,r)=>{n.disconnect(),s.removeEventListener(e,r),l(t)},l=e=>{t.set(e,!0),e[o]()};return Object.defineProperties(a,{connectedCallback:{configurable:!0,value(){if(i&&i.apply(this,arguments),o in this&&!t.has(this)){const s=this,{ownerDocument:r}=s;if(t.set(s,!1),"complete"===r.readyState||n(s))Promise.resolve(s).then(l);else{const t=()=>c(s,a,r,t);r.addEventListener(e,t);const a=new MutationObserver(()=>{n(s)&&c(s,a,r,t)});a.observe(s.parentNode,{childList:!0,subtree:!0})}}}},[r]:{configurable:!0,get(){const e=t.has(this)?!0===t.get(this):n(this);return e&&Object.defineProperty(this,r,{value:e}),e}}}),s}}return s.withParsedCallback(s)})();